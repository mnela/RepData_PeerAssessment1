View(features)
X <- cbind(subject,X)
colnames(X) <- c("activity_id")
View(X)
X <- X[,-1]
View(X)
X <- cbind(y,X)
View(X)
colnames(X) <- c("activity_id")
View(X)
td <- read.table(tidaydata.txt)
setwd("~/Documents/Coursera/Data Science Specialization/Getting and Cleaning Data/UCI HAR Dataset")
td <- read.table(tidaydata.txt)
td <- read.table("tidydata.txt")
View(td)
setwd("~/Documents/Coursera/Data Science Specialization/Getting and Cleaning Data/evaluations")
read.csv(std5.txt)
std5 <- read.csv("std5.txt")
View(std5)
std5 <- read.table("std5.txt")
View(std5)
std5 <- read.table("std5.txt", header=TRUE)
View(std5)
std5 <- read.table("std6.txt", header=TRUE)
View(std6)
View(std5)
std5 <- read.csv("std6.txt", header=TRUE)
View(std5)
names(features)
features.names
source('~/.active-rstudio-document')
even <- seq(0,1000,50)
odd <- seq(25,1000,50)
snow <- expand.grid(even, odd)
snow2 <- expand.grid(odd, even)
ggplot()+
scale_shape_identity() +
labs(x = "", y="") +
scale_y_continuous(breaks=NULL)+
scale_x_continuous(breaks=NULL)+
coord_cartesian(xlim = c(10, 990), ylim=c(10,990)) +
geom_point(data=snow, aes(x=Var1, y = Var2, shape=8))+
geom_point(data=snow2, aes(x=Var1, y = Var2, shape=8))+
geom_area(data=topboth, aes(x = topboth$Group.1,y = topboth$minline),position = 'stack', colour="white", show_guide=FALSE)
names(newNEI) <- tolower(names(newNEI))
View(newNEI)
View(newNEI[,1])
View(newNEI)
str(newNEI)
newNEI$scc <- as.factor(newNEI$scc)
str(newNEI)
melted <- melt(newNEI)
View(melted)
casted1 <- dcast(melted, scc+year ~ variable)
View(casted1)
casted2 <- dcast(melted, scc ~ year + variable)
View(casted2)
melted <- melt(mNEI)
aNEI <- mNEI[,-c(9,10, 15,16,17,18,19)]
View(aNEI)
aNEI <- mNEI[,-c(9,18,19)]
View(aNEI)
aNEI <- mNEI[,-c(9)]
View(aNEI)
aNEI <- mNEI[,-c(16,17)]
aNEI <- aNEI[,-c(9,14,15)]
View(aNEI)
aNEI <- aNEI[,-c("Option.Group", "Option.Set", "Map.To", "Last.Inventory.Year", "Created_Date", "Revised_Date")]
aNEI <- mNEI[,-c("Option.Group", "Option.Set", "Map.To", "Last.Inventory.Year", "Created_Date", "Revised_Date")]
aNEI <- mNEI[,-c(10,17,18,19,20)]
View(aNEI)
aNEI <- mNEI[,-c(10)]
aNEI <- mNEI[,-c(14)]
View(aNEI)
melted <- melt(aNEI)
View(melted)
casted2 <- dcast(melted, scc ~ year + variable)
casted2 <- dcast(melted, SCC ~ year + variable)
View(casted2)
aNEI <- mNEI[,-c(10,17,18,19,20)]
aNEI <- qNEI[,-c(10)]
aNEI <- aNEI[,-c(10)]
aNEI <- aNEI[,-c(14)]
melted <- melt(aNEI)
View(aNEI)
View(aNEI)
View(melted)
casted2 <- dcast(melted, SCC ~ year + variable)
View(casted2)
casted2 <- dcast(melted, SCC ~ year + variable+ type)
View(casted2)
write.csv(casted2, "NEIyearbytypebySCC.csv")
getwd()
meltedpoint <- subset(melted, type =="POINT", select = ALL)
meltedpoint <- subset(melted, type =="POINT")
castedpoint <- dcast(meltedpoint, SCC~year + variable + type)
View(castedpoint)
castedpoint2 <- dcast(meltedpoint, SCC+ Short.Name ~year + variable + type)
View(catedpoint2)
View(castedpoint2)
castedpoint2 <- dcast(meltedpoint, Short.Name ~year + variable + type, value.var = "sum")
castedpoint2 <- dcast(meltedpoint, Short.Name ~year + variable + type, value.var = "value")
View(castedpoint2)
castedpoint2 <- dcast(meltedpoint, Short.Name ~year + variable + type, fun.aggregate = sum)
View(castedpoint2)
meltedroad <- subset(melted, type == "ON-ROAD")
castedroad2 <- dcast(meltedroad, Short.Name ~year + variable + type, fun.aggregate = sum)
castedroad <- dcast(meltedroad, SCC~year + variable + type)
View(castedroad)
View(castedroad2)
castedroadEI <- dcast(meltedroad, EI.Sector~year + variable + type)
castedroadSCC1 <- dcast(meltedroad, SCC.Level.One~year + variable + type)
View(castedroadEI)
castedroadEIsum <- dcast(meltedroad, EI.Sector ~year + variable + type, fun.aggregate = sum)
View(castedroadEIsum)
View(castedroadSCC1)
castedroadSCC2 <- dcast(meltedroad, SCC.Level.Two~year + variable + type)
View(castedroadSCC2)
castedroadSCC2 <- dcast(meltedroad, SCC.Level.One + SCC.Level.Two~year + variable + type)
View(castedroadSCC2)
castedroadSCC3 <- dcast(meltedroad, SCC.Level.Two + SCC.Level.Three ~ year + variable + type)
View(castedroadSCC3)
castedroadSCC4 <- dcast(meltedroad, SCC.Level.Two + SCC.Level.Three + SCC.Level.Four ~ year + variable + type)
View(castedroadSCC4)
castedroadSCC4sum <- dcast(meltedroad, SCC.Level.Two + SCC.Level.Three + SCC.Level.Four ~year + variable + type, fun.aggregate = sum)
View(castedroadSCC4sum)
?basenames
?basename
names(ldf)
names(files)
files
basename(files)
names(ldf) <- basename(files)
names(ldf)
head(ldf$subject_test.txt)
install.packages("kernlab")
library("kernlab", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data(spam)
str(spam[, 1:5])
str(spam, 5)
str(spam, no.list)
str(spam, no.list=TRUE)
str(args)
str(str)
trainIndication <- rbinom(4601, size = 1, prob = 0.5)
?rbinom
trainSet <- spam[trainIndication==1,]
testSet <- spam[trainIndication ==0,]
names(trainSet)
head(trainSet)
head(testSet)
table(testSet$type)
table(trainSet$type)
plot(log(trainSet[,1:4]+1))
costfunction = function (x,y)sum(x!=(y>0.5))
costfunction
costfunction(0, 1)
costfunction(1, 1)
costfunction(2, 1)
costfunction(-2, 1)
costfunction(-2, 0)
costfunction(1, 0)
costfunction(0, 0)
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
str(trainSet$type)
str(testSet$type)
trainSet$numType= as.numeric(trainSet$type)
str(testSet$numType)
str(trainSet$numType)
trainSet$numType= trainSet$numType-1
str(trainSet$numType)
?glm
?remformulate
?reformulate
lmformula <- reformulate(names(trainSet[i]), response = numType)
lmformula <- reformulate(names(trainSet[1]), response = numType)
lmformula <- reformulate(names(trainSet[1]), response = trainSet$numType)
lmformula
str(lmformula)
?glm
names(trainSet[1])
names(trainSet[2])
?cv.glm
setwd("~/Documents/Coursera/Data Science Specialization/Reproducable Research/Peer Assesment 1/RepData_PeerAssessment1")
?read.csv
initial <- read.csv("activity.csv", nrows=100)
View(initial)
classes <- sapply(inital, class)
classes <- sapply(initial, class)
classes
initial$date <- as.Date(initial$date)
View(initial)
classes <- sapply(initial, class)
classes
classes$steps <- "integer"
classes
classes <- sapply(initial, class)
str(classes)
str(class)
?chr
? Named chr
?"Named chr"
classes <- c("integer", "Date", "integer")
str(classes)
classes <- c(steps="integer", date="Date", interval="integer")
str(classes)
activity <- read.csv("activity.csv", colClasses=classes)
View(activity)
?file
attributes(classes)
attributes(activity)
x <- vector()
x
x <- 5
x
x <- 6
x
x <- vector()
x[1] <- 5
xx
x
x[2] <- 6
x
str(x)
class(x)
x <- vector()
class(x)
?seq_along
?along.with
sum(is.na(activity$interval))
sum(is.na(activity$date))
sum(is.na(activity$steps))
activity2 <- activity[!is.na(activity$steps),]
View(activity2)
str(activity2$Date)
str(activity2$date)
libaray(reshape2)
library(reshape2)
activitymelt <- melt(activity2,id = c("date", "interval"))
View(activitymelt)
activitymelt2 <- melt(activity2,id = c("date"))
View(activitymelt2)
activitymelt3 <- melt(activity,id = c("date"), na.rm = TRUE)
tail(activitymelt2)
activitymelt3 <- melt(activity,id = c("date", "interval"), na.rm = TRUE)
activitycast <- cast(activitymelt, id~steps,mean)
?melt
activitycast <- dcast(activitymelt, id~steps,mean)
activitycast <- dcast(activitymelt, id~ variable = steps,mean)
activitycast <- dcast(activitymelt, id~ variable = "steps",mean)
activitycast <- dcast(activitymelt, id~ variable ,mean)
activitycast <- dcast(activitymelt, id~ variable ,formula = mean)
head(activitymelt)
str(activitymelt)
activitycast <- dcast(activitymelt, date ~ variable , mean)
View(activitycast)
sumbyday <- dcast(activitymelt, date ~ variable , sum)
#meanbyday is the mean number of steps taken each day
meanbyday <- dcast(activitymelt, date ~variable, mean)
View(sumbyday)
View(meanbyday)
medianbyday <- dcast(activitymelt, date ~variable, median)
?hist
hist(sumbyday)
hist(sumbyday$steps)
hist(sumbyday$steps, xlab= "date")
hist(sumbyday$steps, xlab= date)
hist(sumbyday$steps, xlab= "date")
hist(sumbyday$steps, xlab= "Total number of steps by day")
hist(sumbyday$steps, xlab= "Total number of steps by day", breaks = 53)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 53)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 30)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 53)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 30)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 20)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 15)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 20)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 19)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 18)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 17)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 16)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 15)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 16)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day", breaks = 15)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day by thousands", main = FALSE, breaks = 15)
hist(sumbyday$steps/1000, xlab= "Total number of steps by day by thousands", main = NULL, breaks = 15)
hist(sumbyday$steps, xlab= "Total number of steps by day by thousands", main = NULL, breaks = 15)
View(sumbyday)
mean(sumbyday$steps)
median(sumbyday$steps)
stepstats  <- c(mean = mean(sumbyday$steps), median = median(sumbyday$steps))
stepstats
averageoverdays <- dcast <- (activitymelt, interval ~ variable, mean)
averageoverdays <- dcast(activitymelt, interval ~ variable, mean)
View(averageoverdays)
with(averageoverdays, plot(interval, steps))
with(averageoverdays, plot(interval, steps, type = l))
with(averageoverdays, plot(interval, steps), type = l)
with(averageoverdays, plot(interval, steps), type = "l")
plot
?plot
with(averageoverdays, plot(interval, steps, type = "l"))
max(averageoverdays$steps)
averageoverdays[max(averageoverdays),]
grep("206.16", averageoverdays)
?grep
grep("206.16", averageoverdays, fixed = TRUE)
averageoverdays[2]
index(max(averageoverdays$steps))
match(max(averageoverdays$steps))
?match
max(averageoverdays$steps) %in% averageoverdays
max(averageoverdays$steps) %in% averageoverdays$steps
averageoverdays$steps %in% max(averageoverdays$steps)
sum(averageoverdays$steps %in% max(averageoverdays$steps))
averageoverdays[averageoverdays$steps %in% max(averageoverdays$steps),]
60/5
12*24
5*288
aOct1 <- activity[activity$date == "2012-10-01",]
View(aOct1)
1440*5
60*24
2355/5
aOct2 <- activity[activity$date == "2012-10-02",]
View(aOct2)
install.packages("sqldf")
library("sqldf", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?class
mySql<-"SELECT * from activity WHERE date = '2010-10-03' OR date = '2010-10-04'"
mySql
aOct34 <- activity[mySql,]
View(aOct34)
mySql<-"SELECT * from activity WHERE date = '2010-10-03'"
aOct34 <- activity[mySql,]
60*24
288*5
5*1440
?scrptime
?strptime
intime <- strptime(aOct1$interval, format = "HM")
View(intime)
intime <- strptime(aOct1$interval[1:12], format = "M")
View(intime)
intime <- strptime(aOct1$interval[3:12], format = "M")
View(intime)
intime <- strptime(aOct1$interval[3:12], format = "%M")
View(intime)
intime <- strptime(aOct1$interval[1:12], format = "%M")
View(intime)
intime <- strptime(aOct1$interval, format = "%H%M")
View(intime)
intime <- strptime(aOct1$interval, format = "%M")
View(intime)
newinterval <- paste("0","aOct2$interval[13]")
newinterval
newinterval <- paste("0",aOct2$interval[13])
newinterval
newinterval <- paste("0",aOct2$interval[13], sep="")
newinterval
17568/288
activity$interval[1]
activity$interval[289]
activity$interval[288]
i=1
for (j in 1:12){
striptime(activity$interval[289*[i-1]+j], format = "%M")
}
for (j in 1:12){
striptime(activity$interval[289*(i-1)+j], format = "%M")
}
for (j in 1:12){
strptime(activity$interval[289*(i-1)+j], format = "%M")
}
View(activity)
for (j in 1:12){
print(strptime(activity$interval[289*(i-1)+j], format = "%M"))
}
for (j in 1:12){
print(strptime(activity$interval[289*(i-1)+j-1], format = "%M"))
}
intime <- strptime(aOct1$interval, format = "%k")
View(intime)
intime <- strptime(aOct1$interval, format = "%k%M")
View(intime)
intime <- strptime(aOct1$interval, format = "%M")
View(intime)
for (j in 1:12){
print(strptime(activity$interval[289*(i-1)+j], format = "%M"))
}
for (j in 13:20){
print(paste0("0", activity$interval[289*(i-1)+j]))
}
for (j in 13:120){
print(paste0("0", activity$interval[289*(i-1)+j]))
}
for (j in 13:288){
print(strptime(activity$interval[289*(i-1)+j], format = "%H%M"))
}
for (i in 1:61){
for (j in 1:12){
activity$newinterval[289*(i-1)+j] <- strptime(activity$interval[289*(i-1)+j], format = "%M")
}
for (j in 13:120){
activity$interval[289*(i-1)+j] <- paste0("0", activity$interval[289*(i-1)+j])
}
for (j in 13:288){
activity$newinterval[289*(i-1)+j] <- strptime(activity$interval[289*(i-1)+j], format = "%H%M")
}
}
warnings()
View(activity)
activity  <- read.csv("activity.csv", colClasses = classes)
View(activity)
for (i in 1:61){
for (j in 1:12){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%M")
}
for (j in 13:120){
activity$interval[289*(i-1)+j] <- paste0("0", activity$interval[288*(i-1)+j])
}
for (j in 13:288){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%H%M")
}
}
View(activity)
View(newinterval)
head(newinterval)
newinterval <- c()
newinterval
activity  <- read.csv("activity.csv", colClasses = classes)
for (i in 2:3){ print i
for (j in 1:12){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%M")
}
for (j in 13:120){
activity$interval[289*(i-1)+j] <- paste0("0", activity$interval[288*(i-1)+j])
if (j=120){print( activity$interval[289*(i-1)+j]) }
}
for (j in 13:288){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%H%M)
}
for (i in 2:3){ print(i)
for (j in 1:12){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%M")
}
for (j in 13:120){
activity$interval[289*(i-1)+j] <- paste0("0", activity$interval[288*(i-1)+j])
if (j=120){print( activity$interval[289*(i-1)+j]) }
}
for (j in 13:288){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%H%M)
}
}
for (i in 2:3){ print(i)
for (j in 1:12){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%M")
}
for (j in 13:120){
activity$interval[289*(i-1)+j] <- paste0("0", activity$interval[288*(i-1)+j])
if (j==120){print( activity$interval[289*(i-1)+j]) }
}
for (j in 13:288){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%H%M)
}
}
activity  <- read.csv("activity.csv", colClasses = classes)
activity  <- read.csv("activity.csv", colClasses = classes)
for (i in 2:4){
print(i)
for (j in 1:12){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%M")
}
for (j in 13:120){
activity$interval[289*(i-1)+j] <- paste0("0", activity$interval[288*(i-1)+j])
if (j==120){print( activity$interval[289*(i-1)+j]) }
}
for (j in 13:288){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%H%M)
}
}
}
}
for (i in 2:4){
print(i)
for (j in 1:12){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%M")
}
for (j in 13:120){
activity$interval[289*(i-1)+j] <- paste0("0", activity$interval[288*(i-1)+j])
if (j==120){print( activity$interval[289*(i-1)+j]) }
}
for (j in 13:288){
newinterval[289*(i-1)+j] <- strptime(activity$interval[288*(i-1)+j], format = "%H%M)
}
}
```
```{r}
View(activity)
for (i in 2:4){
print(i)
for (j in 1:12){
strptime(activity$interval[288*(i-1)+j], format = "%M")
}
for (j in 13:120){
activity$interval[289*(i-1)+j] <- paste0("0", activity$interval[288*(i-1)+j])
if (j==120){print( activity$interval[289*(i-1)+j]) }
}
for (j in 13:288){
strptime(activity$interval[288*(i-1)+j], format = "%H%M)
}
}
